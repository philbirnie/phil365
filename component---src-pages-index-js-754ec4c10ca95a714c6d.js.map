{"version":3,"sources":["webpack:///./src/components/table.js","webpack:///./src/components/stats.js","webpack:///./src/pages/index.js"],"names":["Table","cumulativeDistance","className","runData","map","dayData","distance","cumulativeDistanceDisplayed","Math","round","key","date","time","target","to","remark","Stats","average","day","reduce","accumulator","currentValue","length","max","apply","parseFloat","IndexPage","title"],"mappings":"2qEA6CeA,EAzCD,WAEb,IAAIC,EAAqB,EAEzB,OACC,+BACC,+BACA,4BACC,wBAAIC,UAAU,YAAd,QACA,wBAAIA,UAAU,YAAd,eACA,wBAAIA,UAAU,gBAAd,YACA,wBAAIA,UAAU,kBAAd,kBACA,wBAAIA,UAAU,aAAd,SACA,wBAAIA,UAAU,eAAd,aAGD,+BAECC,EAAQC,KAAK,SAAEC,GAEdJ,GAAyC,IAAnBI,EAAQC,SAE9B,IAAMC,EAA8BC,KAAKC,MAAMR,GAAsB,IAErE,OAAO,wBAAIS,IAAML,EAAQM,MACxB,wBAAIT,UAAU,YAAaG,EAAQM,MACnC,wBAAIT,UAAU,YAAaG,EAAQO,MACnC,wBAAIV,UAAU,gBAAiBG,EAAQC,UACvC,wBAAIJ,UAAU,kBAAmBK,GACjC,wBAAIL,UAAU,aACb,kBAAC,OAAD,CAAMW,OAAO,SAASC,GAAKT,EAAQD,KAAnC,QAED,wBAAKF,UAAU,eAAgBG,EAAQU,eCX9BC,G,UAtBD,WAEb,IAEMC,EAAUd,EAAQC,KAAK,SAAAc,GAAG,OAAIA,EAAIZ,YAAWa,QAFvC,SAAEC,EAAaC,GAAf,OAAiCD,EAAcC,KAEQlB,EAAQmB,OAErEC,EAAMf,KAAKe,IAAIC,MAAOhB,KAAML,EAAQC,KAAK,SAAAc,GAAG,OAAIO,WAAYP,EAAIZ,cAEtE,OACC,yBAAKJ,UAAU,SACd,4BACC,gDACA,4BAAMM,KAAKC,MAAiB,IAAVQ,GAAkB,IAApC,UACA,gDACA,4BAAMM,EAAN,UACA,0CACA,4BAAMf,KAAKC,MAASN,EAAQmB,OAAS,IAAQ,KAAU,IAAvD,SCGWI,UAfG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,2CACX,oFACA,yJACA,sCACA,4BACE,8DACA,gFAEF,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"component---src-pages-index-js-754ec4c10ca95a714c6d.js","sourcesContent":["import React from \"react\"\nimport runData from \"../data/run-data.json\";\nimport { Link } from \"gatsby\";\n\nconst Table = () => {\n\n\tlet cumulativeDistance = 0.00;\n\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th className=\"col-date\">Date</th>\n\t\t\t\t<th className=\"col-time\">Time of Day</th>\n\t\t\t\t<th className=\"col-distance\">Distance</th>\n\t\t\t\t<th className=\"col-cumulative\">Total Distance</th>\n\t\t\t\t<th className=\"col-route\">Route</th>\n\t\t\t\t<th className=\"col-remarks\">Remarks</th>\n\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{\n\t\t\t\trunData.map( ( dayData ) => {\n\n\t\t\t\t\tcumulativeDistance += dayData.distance * 100;\n\n\t\t\t\t\tconst cumulativeDistanceDisplayed = Math.round(cumulativeDistance) / 100;\n\n\t\t\t\t\treturn <tr key={ dayData.date }>\n\t\t\t\t\t\t<td className=\"col-date\">{ dayData.date }</td>\n\t\t\t\t\t\t<td className=\"col-time\">{ dayData.time }</td>\n\t\t\t\t\t\t<td className=\"col-distance\">{ dayData.distance }</td>\n\t\t\t\t\t\t<td className=\"col-cumulative\">{ cumulativeDistanceDisplayed }</td>\n\t\t\t\t\t\t<td className=\"col-route\">\n\t\t\t\t\t\t\t<Link target=\"_blank\" to={ dayData.map }>Map</Link>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td  className=\"col-remarks\">{ dayData.remark }</td>\n\t\t\t\t\t</tr>\n\t\t\t\t} )\n\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nexport default Table\n","import React from \"react\"\nimport runData from \"../data/run-data.json\";\n\nconst Stats = () => {\n\n\tconst sum = ( accumulator, currentValue ) => accumulator + currentValue;\n\n\tconst average = runData.map( day => day.distance ).reduce( sum ) / runData.length;\n\n\tconst max = Math.max.apply( Math, runData.map( day => parseFloat( day.distance ) ) );\n\n\treturn (\n\t\t<div className=\"stats\">\n\t\t\t<dl>\n\t\t\t\t<dt>Average Distance</dt>\n\t\t\t\t<dd>{ Math.round( average * 100 ) / 100 } miles</dd>\n\t\t\t\t<dt>Maximum Distance</dt>\n\t\t\t\t<dd>{ max } miles</dd>\n\t\t\t\t<dt>Completion</dt>\n\t\t\t\t<dd>{ Math.round( ( runData.length / 365 ) * 10000 ) / 100 }%</dd>\n\t\t\t</dl>\n\t\t</div>\n\t)\n}\n\nexport default Stats\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Table from \"../components/table\"\nimport Stats from \"../components/stats\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Phil Birnie runs for 365 Days in a Row\" />\n    <p>Hello! My name is Phil.  I live in Worthington, Ohio.</p>\n    <p>Starting on January 1, 2021, I will attempt to run for 365 days in a row -- just for fun. Keep track of my progress below.</p>\n    <h3>Rules:</h3>\n    <ul>\n      <li>Run at least 0.5 miles per day</li>\n      <li>Runs than span midnight may count as both days.</li>\n    </ul>\n    <Table />\n    <Stats />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}